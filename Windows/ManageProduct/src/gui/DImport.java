/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.DatabaseAPI;
import excel.ExcelProcess;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author PHUC
 */
public class DImport extends javax.swing.JDialog {

    private static final int CATEGORY = 0;
    private static final int PHONE = 1;
    private static final int INVENTORY = 2;
    private static final int PAYMENT = 3;
    private static final int DISCOUNT = 4;
    private static final int BILL = 5;
    private int type;

    /**
     * Creates new form DImport
     */
    public DImport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCategory = new javax.swing.JButton();
        btnPhone = new javax.swing.JButton();
        btnInventory = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();
        btnDiscount = new javax.swing.JButton();
        btnBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCategory.setText("Category");
        btnCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoryActionPerformed(evt);
            }
        });

        btnPhone.setText("Phone");
        btnPhone.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhoneActionPerformed(evt);
            }
        });

        btnInventory.setText("Inventory");
        btnInventory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryActionPerformed(evt);
            }
        });

        btnPayment.setText("Payment");
        btnPayment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnDiscount.setText("Discount");
        btnDiscount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiscountActionPerformed(evt);
            }
        });

        btnBill.setText("Bill");
        btnBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCategory)
                .addGap(18, 18, 18)
                .addComponent(btnPhone)
                .addGap(18, 18, 18)
                .addComponent(btnInventory)
                .addGap(18, 18, 18)
                .addComponent(btnPayment)
                .addGap(18, 18, 18)
                .addComponent(btnDiscount)
                .addGap(18, 18, 18)
                .addComponent(btnBill)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBill, btnCategory, btnDiscount, btnInventory, btnPayment, btnPhone});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCategory)
                    .addComponent(btnPhone)
                    .addComponent(btnInventory)
                    .addComponent(btnPayment)
                    .addComponent(btnDiscount)
                    .addComponent(btnBill))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoryActionPerformed
        // TODO add your handling code here:
        type = CATEGORY;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCategoryActionPerformed

    private void btnPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhoneActionPerformed
        // TODO add your handling code here:
        type = PHONE;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPhoneActionPerformed

    private void btnInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryActionPerformed
        // TODO add your handling code here:
        type = INVENTORY;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInventoryActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        // TODO add your handling code here:
        type = PAYMENT;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btnDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiscountActionPerformed
        // TODO add your handling code here:
        type = DISCOUNT;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDiscountActionPerformed

    private void btnBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillActionPerformed
        // TODO add your handling code here:
        type = BILL;
        boolean ok = process();
        if(ok){
            JOptionPane.showMessageDialog(this, "Import thành công!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBillActionPerformed

    private boolean process() {
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("EXCEL", "xls"));
        int returnValue = fileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            ExcelProcess process = new ExcelProcess(selectedFile);
            try {

                List list = null;//process.readDiscount(0);
                switch (type) {
                    case INVENTORY:
                        list = process.readInventory(0);
                        return DatabaseAPI.insertMultipleInventory(list);
                    case PHONE:
                        list = process.readPhone(0);
                        return DatabaseAPI.insertMultiplePhone(list);
                    case PAYMENT:
                        list = process.readPayment(0);
                        return DatabaseAPI.insertMultiplePayment(list);
                    case DISCOUNT:
                        list = process.readDiscount(0);
                        return DatabaseAPI.insertMultipleDiscount(list);
                    case BILL:
                        list = process.readBill(0);
                        return DatabaseAPI.insertMultipleBill(list);
                    case CATEGORY:
                        list = process.readCategory(0);
                        return DatabaseAPI.insertMultipleCategory(list);
                    default:
                        return false;
                }
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Import thất bại!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        return false;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBill;
    private javax.swing.JButton btnCategory;
    private javax.swing.JButton btnDiscount;
    private javax.swing.JButton btnInventory;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnPhone;
    // End of variables declaration//GEN-END:variables
}
